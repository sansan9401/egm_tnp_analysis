import ROOT as rt
import numpy as np
from array import array
import sys,os

def GetPUweight(num,den):
    while 0. in den:
        den[-2]+=den[-1]
        den=den[:-1]
    if len(num)>len(den):
        while len(num)!=len(den):
            num[-2]+=num[-1]
            num=num[:-1]
    elif len(num)<len(den):
        while len(num)!=len(den):
            num+=[0]

    num=num/np.linalg.norm(num)
    den=den/np.linalg.norm(den)
    while num[-1]/den[-1]>3:
        num[-2]+=num[-1]
        num=num[:-1]
        den[-2]+=den[-1]
        den=den[:-1]
    w=[num[i]/den[i] for i in range(len(num))]
    #print w
    return w

pu_data_UL2016preVFP=[3.5e+03,2.93e+05,1.08e+06,1.8e+06,2.71e+06,3.71e+06,4.76e+06,9.53e+06,3.06e+07,7.3e+07,1.52e+08,2.69e+08,4.15e+08,5.84e+08,7.73e+08,9.71e+08,1.14e+09,1.25e+09,1.32e+09,1.35e+09,1.34e+09,1.31e+09,1.26e+09,1.19e+09,1.1e+09,1e+09,8.88e+08,7.68e+08,6.49e+08,5.38e+08,4.37e+08,3.49e+08,2.73e+08,2.09e+08,1.56e+08,1.14e+08,8.05e+07,5.51e+07,3.64e+07,2.32e+07,1.42e+07,8.3e+06,4.66e+06,2.5e+06,1.28e+06,6.33e+05,3e+05,1.38e+05,6.24e+04,2.91e+04,1.5e+04,9.25e+03,7e+03,6.1e+03,5.69e+03,5.43e+03,5.2e+03,4.97e+03,4.73e+03,4.46e+03,4.19e+03,3.9e+03,3.61e+03,3.32e+03,3.03e+03,2.75e+03,2.47e+03,2.21e+03,1.97e+03,1.74e+03,1.52e+03,1.32e+03,1.14e+03,983,839,711,598,500,415,342,280,228,184,148,118,93.3,73.3,57.3,44.4,34.2,26.2,19.9,15,11.3,8.4,6.21,4.57,3.33,2.42,1.74]
pu_data_UL2016postVFP=[2.35e+05,5.45e+05,1.23e+06,1.33e+06,1.76e+06,2.28e+06,2.24e+06,3.36e+06,4.71e+06,5.74e+06,2.51e+07,9.08e+07,1.88e+08,2.93e+08,4.01e+08,5.18e+08,6.24e+08,6.96e+08,7.32e+08,7.54e+08,7.9e+08,8.4e+08,8.74e+08,8.78e+08,8.63e+08,8.41e+08,8.17e+08,7.87e+08,7.51e+08,7.06e+08,6.51e+08,5.88e+08,5.19e+08,4.48e+08,3.78e+08,3.13e+08,2.55e+08,2.03e+08,1.57e+08,1.19e+08,8.65e+07,6.07e+07,4.09e+07,2.63e+07,1.62e+07,9.53e+06,5.34e+06,2.85e+06,1.45e+06,7.03e+05,3.25e+05,1.43e+05,6.04e+04,2.44e+04,9.47e+03,3.55e+03,1.29e+03,462,163,57.6,20.5,7.48,2.8,1.09,0.447,0.191,0.085,0.0388,0.0179,0.00834,0.00386,0.00177,0.000805,0.00036,0.000159,6.89e-05,2.94e-05,1.24e-05,5.11e-06,2.07e-06,8.29e-07,3.26e-07,1.26e-07,4.78e-08,1.79e-08,6.56e-09,2.36e-09,8.4e-10,2.91e-10,9.56e-11,3.33e-11,1.12e-11,5.42e-12,0,0,0,0,0,0,0]
pu_data_UL2017=[2.59e+05,1.08e+06,2.01e+06,3.78e+06,4.06e+06,5.88e+06,6.44e+06,6.79e+06,9.18e+06,2.18e+07,4.37e+07,8.26e+07,1.32e+08,1.89e+08,2.67e+08,3.77e+08,5.26e+08,7e+08,8.73e+08,1.03e+09,1.17e+09,1.29e+09,1.37e+09,1.44e+09,1.5e+09,1.55e+09,1.6e+09,1.63e+09,1.63e+09,1.61e+09,1.57e+09,1.5e+09,1.43e+09,1.33e+09,1.23e+09,1.13e+09,1.03e+09,9.45e+08,8.64e+08,7.95e+08,7.43e+08,7.1e+08,6.98e+08,7.06e+08,7.3e+08,7.62e+08,7.91e+08,8.05e+08,7.95e+08,7.55e+08,6.86e+08,5.94e+08,4.91e+08,3.87e+08,2.92e+08,2.12e+08,1.49e+08,1.01e+08,6.69e+07,4.34e+07,2.77e+07,1.75e+07,1.09e+07,6.79e+06,4.21e+06,2.61e+06,1.63e+06,1.03e+06,6.51e+05,4.18e+05,2.71e+05,1.78e+05,1.17e+05,7.81e+04,5.22e+04,3.5e+04,2.35e+04,1.57e+04,1.05e+04,6.99e+03,4.63e+03,3.05e+03,2e+03,1.3e+03,844,542,345,218,137,85,52.3,31.9,19.3,11.6,6.85,4.02,2.34,1.34,0.765,0.431]
pu_data_UL2018=[4.19e+05,2.09e+06,6.99e+06,1.52e+07,2.65e+07,4.32e+07,6.82e+07,1.04e+08,1.6e+08,2.46e+08,3.69e+08,5.34e+08,7.46e+08,1.01e+09,1.3e+09,1.62e+09,1.91e+09,2.16e+09,2.35e+09,2.48e+09,2.59e+09,2.68e+09,2.77e+09,2.85e+09,2.93e+09,2.99e+09,3.02e+09,3.02e+09,2.98e+09,2.88e+09,2.73e+09,2.51e+09,2.25e+09,1.95e+09,1.63e+09,1.32e+09,1.03e+09,7.76e+08,5.66e+08,4.01e+08,2.77e+08,1.87e+08,1.24e+08,8.1e+07,5.24e+07,3.35e+07,2.12e+07,1.33e+07,8.22e+06,5e+06,2.99e+06,1.75e+06,1.01e+06,5.66e+05,3.13e+05,1.7e+05,9.04e+04,4.74e+04,2.45e+04,1.24e+04,6.21e+03,3.05e+03,1.47e+03,697,323,147,65.1,28.2,11.9,4.89,1.96,0.762,0.288,0.106,0.038,0.0132,0.00447,0.00147,0.000475,0.000152,5.07e-05,1.93e-05,9.5e-06,6.23e-06,4.89e-06,4.13e-06,3.57e-06,3.11e-06,2.7e-06,2.35e-06,2.03e-06,1.75e-06,1.51e-06,1.3e-06,1.11e-06,9.48e-07,8.07e-07,6.86e-07,5.8e-07,4.9e-07,4.13e-07,3.47e-07,2.9e-07,2.42e-07,2.02e-07,1.68e-07,1.39e-07,1.15e-07,9.44e-08,7.75e-08]

mix_2016_25ns_UltraLegacy_PoissonOOTPU_cfi=[
    1.00402360149e-05, 5.76498797172e-05, 7.37891400294e-05, 0.000110932895295, 0.000158857714773,
    0.000368637432599, 0.000893114107873, 0.00189700774575, 0.00358880167437, 0.00636052573486,
    0.0104173961179, 0.0158122597405, 0.0223785660712, 0.0299186888073, 0.0380275944896,
    0.0454313901624, 0.0511181088317, 0.0547434577348, 0.0567906239028, 0.0577145461461,
    0.0578176902735, 0.0571251566494, 0.0555456541498, 0.053134383488, 0.0501519041462,
    0.0466815838899, 0.0429244592524, 0.0389566776898, 0.0348507152776, 0.0307356862528,
    0.0267712092206, 0.0229720184534, 0.0193388653099, 0.0159602510813, 0.0129310510552,
    0.0102888654183, 0.00798782770975, 0.00606651703058, 0.00447820948367, 0.00321589786478,
    0.0022450422045, 0.00151447388514, 0.000981183695515, 0.000609670479759, 0.000362193408119,
    0.000211572646801, 0.000119152364744, 6.49133515399e-05, 3.57795801581e-05, 1.99043569043e-05,
    1.13639319832e-05, 6.49624103579e-06, 3.96626216416e-06, 2.37910222874e-06, 1.50997403362e-06,
    1.09816650247e-06, 7.31298519122e-07, 6.10398791529e-07, 3.74845774388e-07, 2.65177281359e-07,
    2.01923536742e-07, 1.39347583555e-07, 8.32600052913e-08, 6.04932421298e-08, 6.52536630583e-08,
    5.90574603808e-08, 2.29162474068e-08, 1.97294602668e-08, 1.7731096903e-08, 3.57547932012e-09,
    1.35039815662e-09, 8.50071242076e-09, 5.0279187473e-09, 4.93736669066e-10, 8.13919708923e-10,
    5.62778926097e-09, 5.15140589469e-10, 8.21676746568e-10, 0.0, 1.49166873577e-09,
    8.43517992503e-09, 0.0, 0.0, 0.0, 0.0,
    0.0, 0.0, 0.0, 0.0, 0.0,
    0.0, 0.0, 0.0, 0.0, 0.0,
    0.0, 0.0, 0.0, 0.0]
mix_2017_25ns_UltraLegacy_PoissonOOTPU_cfi=[
    1.1840841518e-05, 3.46661037703e-05, 8.98772521472e-05, 7.47400487733e-05, 0.000123005176624,
    0.000156501700614, 0.000154660478659, 0.000177496185603, 0.000324149805611, 0.000737524009713,
    0.00140432980253, 0.00244424508696, 0.00380027898037, 0.00541093042612, 0.00768803501793,
    0.010828224552, 0.0146608623707, 0.01887739113, 0.0228418813823, 0.0264817796874,
    0.0294637401336, 0.0317960986171, 0.0336645950831, 0.0352638818387, 0.036869429333,
    0.0382797316998, 0.039386705577, 0.0398389681346, 0.039646211131, 0.0388392805703,
    0.0374195678161, 0.0355377892706, 0.0333383902828, 0.0308286549265, 0.0282914440969,
    0.0257860718304, 0.02341635055, 0.0213126338243, 0.0195035612803, 0.0181079838989,
    0.0171991315458, 0.0166377598339, 0.0166445341361, 0.0171943735369, 0.0181980997278,
    0.0191339792146, 0.0198518804356, 0.0199714909193, 0.0194616474094, 0.0178626975229,
    0.0153296785464, 0.0126789254325, 0.0100766041988, 0.00773867100481, 0.00592386091874,
    0.00434706240169, 0.00310217013427, 0.00213213401899, 0.0013996000761, 0.000879148859271,
    0.000540866009427, 0.000326115560156, 0.000193965828516, 0.000114607606623, 6.74262828734e-05,
    3.97805301078e-05, 2.19948704638e-05, 9.72007976207e-06, 4.26179259146e-06, 2.80015581327e-06,
    1.14675436465e-06, 2.52452411995e-07, 9.08394910044e-08, 1.14291987912e-08, 0.0,
    0.0, 0.0, 0.0, 0.0, 0.0,
    0.0, 0.0, 0.0, 0.0, 0.0,
    0.0, 0.0, 0.0, 0.0, 0.0,
    0.0, 0.0, 0.0, 0.0, 0.0,
    0.0, 0.0, 0.0, 0.0]
mix_2018_25ns_UltraLegacy_PoissonOOTPU_cfi=[
    8.89374611122e-07, 1.1777062868e-05, 3.99725585118e-05, 0.000129888015252, 0.000265224848687,
    0.000313088635109, 0.000353781668514, 0.000508787237162, 0.000873670065767, 0.00147166880932,
    0.00228230649018, 0.00330375581273, 0.00466047608406, 0.00624959203029, 0.00810375867901,
    0.010306521821, 0.0129512453978, 0.0160303925502, 0.0192913204592, 0.0223108613632,
    0.0249798930986, 0.0273973789867, 0.0294402350483, 0.031029854302, 0.0324583524255,
    0.0338264469857, 0.0351267479019, 0.0360320204259, 0.0367489568401, 0.0374133183052,
    0.0380352633799, 0.0386200967002, 0.039124376968, 0.0394201612616, 0.0394673457109,
    0.0391705388069, 0.0384758587461, 0.0372984548399, 0.0356497876549, 0.0334655175178,
    0.030823567063, 0.0278340752408, 0.0246009685048, 0.0212676009273, 0.0180250593982,
    0.0149129830776, 0.0120582333486, 0.00953400069415, 0.00738546929512, 0.00563442079939,
    0.00422052915668, 0.00312446316347, 0.00228717533955, 0.00164064894334, 0.00118425084792,
    0.000847785826565, 0.000603466454784, 0.000419347268964, 0.000291768785963, 0.000199761337863,
    0.000136624574661, 9.46855200945e-05, 6.80243180179e-05, 4.94806013765e-05, 3.53122628249e-05,
    2.556765786e-05, 1.75845711623e-05, 1.23828210848e-05, 9.31669724108e-06, 6.0713272037e-06,
    3.95387384933e-06, 2.02760874107e-06, 1.22535149516e-06, 9.79612472109e-07, 7.61730246474e-07,
    4.2748847738e-07, 2.41170461205e-07, 1.38701083552e-07, 3.37678010922e-08, 0.0,
    0.0, 0.0, 0.0, 0.0, 0.0,
    0.0, 0.0, 0.0, 0.0, 0.0,
    0.0, 0.0, 0.0, 0.0, 0.0,
    0.0, 0.0, 0.0, 0.0
]


pu_weight=GetPUweight(pu_data_UL2016postVFP,mix_2016_25ns_UltraLegacy_PoissonOOTPU_cfi)

f=rt.TFile(sys.argv[1])
dirs=[]
for key in f.GetListOfKeys():
    if "tnp" in key.GetName(): dirs+=[key.GetName()]

outfilename=sys.argv[1].replace("/mc/","/mc_PileupFix/")
if outfilename==sys.argv[1]:
    print("input and output filenames are same! exit...")
    exit(1)
print("creating "+outfilename)
os.system("mkdir -p "+os.path.dirname(outfilename))
fout=rt.TFile(outfilename,"recreate")
fout.Close()
for d in dirs:
    tree=f.Get(d+"/fitter_tree")
    fout=rt.TFile(outfilename,"update")
    newtree=tree.CloneTree(0)

    PUweight=array("f",[0.])
    totWeight=array("f",[0.])
    newtree.SetBranchAddress("PUweight",PUweight)
    newtree.SetBranchAddress("totWeight",totWeight)
    for i in range(tree.GetEntries()):
        tree.GetEntry(i)
        PUweight[0]=pu_weight[min(tree.truePU,len(pu_weight)-1)]
        totWeight[0]=pu_weight[min(tree.truePU,len(pu_weight)-1)]*tree.weight
        newtree.Fill()
    fout.mkdir(d)
    fout.cd(d)
    newtree.Write("fitter_tree")
    fout.Close()
f.Close()
